openapi: 3.0.0
info:
  title: Node.js Backend API
  description: API documentation for the Node.js backend handling contacts.
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local development server

paths:
  /contacts:
    get:
      summary: Get all contacts
      responses:
        '200':
          description: A list of contacts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
        '500':
          description: Internal Server Error
    post:
      summary: Create a new contact
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactInput'
      responses:
        '201':
          description: Contact added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  contactID:
                    type: integer
        '500':
          description: Internal Server Error

  /contacts/{id}:
    get:
      summary: Get contact by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the contact to retrieve
      responses:
        '200':
          description: A contact object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        '404':
          description: Contact not found
        '500':
          description: Internal Server Error
    put:
      summary: Update a contact by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the contact to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactInput'
      responses:
        '200':
          description: Contact updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Contact not found
        '500':
          description: Internal Server Error

         
/accounts:
    get:
      summary: "Retrieve all accounts"
      tags:
        - "Accounts"
      responses:
        200:
          description: "A list of all accounts"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Account"
        500:
          description: "Internal Server Error"
    post:
      summary: "Create a new account"
      tags:
        - "Accounts"
      requestBody:
        description: "Account data to be created"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountInput"
      responses:
        201:
          description: "Account created successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  AccountID:
                    type: integer
        400:
          description: "Missing required fields"
        500:
          description: "Internal Server Error"

/accounts/{id}:
    get:
      summary: "Retrieve a specific account by ID"
      tags:
        - "Accounts"
      parameters:
        - name: id
          in: path
          required: true
          description: "The ID of the account to retrieve"
          schema:
            type: integer
      responses:
        200:
          description: "The account details"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        404:
          description: "Account not found"
        500:
          description: "Internal Server Error"
    put:
      summary: "Update an account by ID"
      tags:
        - "Accounts"
      parameters:
        - name: id
          in: path
          required: true
          description: "The ID of the account to update"
          schema:
            type: integer
      requestBody:
        description: "Updated account data"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountInput"
      responses:
        200:
          description: "Account updated successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        400:
          description: "Missing required fields"
        404:
          description: "Account not found"
        500:
          description: "Internal Server Error"

/accounts/overview/{id}:
  get:
    summary: "Retrieve an account overview by ID"
    tags:
      - "Accounts"
    parameters:
      - name: id
        in: path
        required: true
        description: "The ID of the account to retrieve an overview for"
        schema:
          type: integer
    responses:
      200:
        description: "The account overview"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountOverview"
      404:
        description: "Account not found"
      500:
        description: "Internal Server Error"

components:
  schemas:
    Account:
      type: object
      properties:
        AccountID:
          type: integer
        OrganizationName:
          type: string
        AccountType:
          type: string
          enum: ['Corporation', 'Governmental Department', 'Aid Agency', 'Grant Foundation', 'Retail (3rd Party Fundraising)']
        AccountSize:
          type: string
          enum: ['Small', 'Medium', 'Large']
        GivingPotential:
          type: number
          format: float
        AccountLocation:
          type: string
        AccountChannel:
          type: string
        Segment:
          type: string
          enum: ['Energy', 'Retail']
        PriorDonations:
          type: number
          format: float
        AccountManagerID:
          type: integer
        RecordCreatedBy:
          type: integer
        RecordLastModifiedBy:
          type: integer
        CreatedTimestamp:
          type: string
          format: date-time
        ModifiedTimestamp:
          type: string
          format: date-time
        ExternalSystemID:
          type: string
        Notes:
          type: string

    AccountInput:
      type: object
      properties:
        OrganizationName:
          type: string
        AccountType:
          type: string
        AccountSize:
          type: string
        GivingPotential:
          type: number
          format: float
        AccountLocation:
          type: string
        AccountChannel:
          type: string
        Segment:
          type: string
        PriorDonations:
          type: number
          format: float
        AccountManagerID:
          type: integer
        RecordCreatedBy:
          type: integer
        RecordLastModifiedBy:
          type: integer
        ExternalSystemID:
          type: string
        Notes:
          type: string

    AccountOverview:
      type: object
      properties:
        AccountID:
          type: integer
        OrganizationName:
          type: string
        AccountType:
          type: string
        AccountManagerName:
          type: string
        Contacts:
          type: array
          items:
            $ref: "#/components/schemas/Contact"
        Donations:
          type: array
          items:
            $ref: "#/components/schemas/Donation"
        Addresses:
          type: array
          items:
            $ref: "#/components/schemas/Address"
        Activities:
          type: array
          items:
            $ref: "#/components/schemas/Activity"
      type: object
      properties:
        AccountID:
          type: integer
        OrganizationName:
          type: string
        AccountType:
          type: string
        AccountManagerName:
          type: string
        Contacts:
          type: array
          items:
            $ref: "#/components/schemas/Contact"
        Donations:
          type: array
          items:
            $ref: "#/components/schemas/Donation"
        Addresses:
          type: array
          items:
            $ref: "#/components/schemas/Address"
        Activities:
          type: array
          items:
            $ref: "#/components/schemas/Activity"
    Contact:
      type: object
      properties:
        ContactID:
          type: integer
        FirstName:
          type: string
        LastName:
          type: string
        Role:
          type: string
        IsActive:
          type: boolean
    Donation:
      type: object
      properties:
        DonationID:
          type: integer
        Amount:
          type: number
          format: float
        DonationDate:
          type: string
          format: date-time
    Address:
      type: object
      properties:
        AddressID:
          type: integer
        Building:
          type: string
        AddressLocation:
          type: string
        City:
          type: string
        Province:
          type: string
        PostalCode:
          type: string
        Country:
          type: string
    Activity:
      type: object
      properties:
        ActivityID:
          type: integer
        ActivityType:
          type: string
        ActivityDate:
          type: string
          format: date-time
        Description:
          type: string

    Contact:
      type: object
      properties:
        ContactID:
          type: integer
        FirstName:
          type: string
        LastName:
          type: string
        OfficialEmailAddress:
          type: string
        PersonalEmailAddress:
          type: string
        OfficialPhoneNumber:
          type: string
        PersonalPhoneNumber:
          type: string
        Role:
          type: string
        AssociatedAccount:
          type: integer
        ContactChannel:
          type: string
        IsActive:
          type: boolean
        LastContactDate:
          type: string
          format: date
        PreferredLanguage:
          type: string
        DoNotContact:
          type: boolean
        RecordCreatedBy:
          type: integer
        RecordLastModifiedBy:
          type: integer
        CreatedTimestamp:
          type: string
          format: date-time
        ModifiedTimestamp:
          type: string
          format: date-time
        ExternalSystemID:
          type: string
        Notes:
          type: string

    ContactInput:
      type: object
      properties:
        FirstName:
          type: string
        LastName:
          type: string
        OfficialEmailAddress:
          type: string
        PersonalEmailAddress:
          type: string
        OfficialPhoneNumber:
          type: string
        PersonalPhoneNumber:
          type: string
        Role:
          type: string
        AssociatedAccount:
          type: integer
        ContactChannel:
          type: string
        IsActive:
          type: boolean
        LastContactDate:
          type: string
          format: date
        PreferredLanguage:
          type: string
        DoNotContact:
          type: boolean
        RecordCreatedBy:
          type: integer
        RecordLastModifiedBy:
          type: integer
        ExternalSystemID:
          type: string
        Notes:
          type: string
